1.层次化的协议
	TLS协议由“TLS记录协议”和“TLS握手协议”这两层协议叠加而成。位于底层的TLS记录协议负责进行加密，
	而位于上层的TLS握手协议则负责除加密以外的其他各种操作。上层的TLS握手协议又可以分为4个子协议。
	分别是握手协议、密码规格变更协议、警告协议和应用数据协议。
2.TLS记录协议
	TLS记录协议负责消息的压缩、加密及数据的认证。
	首先，消息被分割成多个较短的片段(fragment)，然后分别对每个片段进行压缩。压缩算法需要与通信对
	象协商决定。
	接下来，经过压缩的片段会被加上消息认证码，这是为了保证完整性，并进行数据的认证。通过附加消息
	认证码的MAC值，可以识别出篡改。与此同时，为了防止重放攻击，在计算消息认证码时，还加上了片段
	的编号。单向散列函数的算法，以及消息认证码所使用的共享密钥都需要与通信对象协商决定。
	再接下来，经过压缩的片段再加上消息认证码会一起通过对称密码进行加密。加密使用CBC模式，CBC模式
	的初始化向量通过主密码(master secret)生成（在TLS1.1中，为了防止CBC攻击，初始化向量改为了由外
	部输入的方式），而对称密钥的算法及共享密钥需要与通信对象协商决定。
	最后，上述经过加密的数据再加上由数据类型、版本号、压缩后的长度组成的报头就是最终的报文数据。
3.握手子协议
	负责生成共享密钥及交换证书。前者是为了进行加密通信，后者是为了通信双方进行认证。
	由于握手协议中的信息交换是在没有加密的情况下进行的，所以在这一过程中必须使用公钥密钥或者
	Diffie-Hellman密钥交换。
	握手子协议过程见流程图 [TLS握手协议]
4.密码规格变更子协议
	负责向通信对象传达变更密码方式的信号，用于密码切换的同步。
5.警告协议
	当握手协议的过程中产生异常，或者发生消息认证码错误、压缩数据无法解压缩等问题时，会使用该协议。
6.应用数据协议
	用于和通信对象之间传送应用数据。
	当TLS承载HTTP时，HTTP的请求和响应就会通过TLS的应用数据协议和TLS记录协议来进行传送。
7.预备主密码
	预备主密码是由客户端生成的随机数，之后会被用作生成主密码的种子。这个值会在使用服务器的公钥进行加密后发送给服务器。
8.主密码
	主密码是TLS客户端和服务器之间协商出来的一个秘密的数值。
	主密码的计算
		*预备主密码
		*客户端随机数
		*服务器随机数
		当使用RSA公钥时，客户端会在发送ClientKeyExchange消息时，将经过加密的预备主密码一起发送给服
		务器。
		当使用Diffie-Hellman密钥交换时，客户端会在发送ClientKeyExchange消息时，将Diffie-Hellman的公
		开值一起发送给服务器。根据这个值，客户端和服务器会各自生成预备主密码。
		客户端随机数和服务器随机数的作用相当于防止攻击者事先计算出密钥的盐。
		当根据预备主密码计算主密码时，会使用由两个单向散列函数（MD5和SHA-1）组合而成的伪随机数生成器
		。之所以同时使用两个单向散列函数，是为了提高安全性。
	主密码用于生成下列6种信息
		对称密码的密钥（客户端→服务器）
		对称密码的密钥（客户端←服务器）
		消息认证码的密钥（客户端→服务器）
		消息认证码的密钥（客户端←服务器）
		对称密码的CBC模式所使用的初始化向量（客户端→服务器）
		对称密码的CBC模式所使用的初始化向量（服务器→客户端）


		
ssl握手过程（单向认证过程）
1.客户端发送 client hello A
2.服务端接收 client hello A
3.服务端发送 server hello A, server certificate A, server key exchange A, server done A，之后服务端flush data，等待接收来自客户端的数据
4.客户端接收 server hello A, server certificate A, server key exchange A, server done A
5.客户端发送 client key exchange A, change cipher spec A, finished A，之后客户端flush data，等待接收来自服务端的数据
6.服务端接收 client key exchange A, change cipher spec A, finished A
7.服务端发送 change cipher spec A, finished A，之后服务端flush data，等待接收来自服务端的数据
8.客户端接收 finished A
9.连接建立