定义
	数字签名对签名密钥和验证密钥进行了区分，使用验证密钥是无法生成签名的。
	签名密钥只能由签名的人持有，而验证密钥则是任何需要验证签名的人都可以持有。
	用私钥加密相当于生成签名，用公钥解密相当于验证签名。
数字签名的方法
	直接对消息签名的方法（不建议使用）
	对消息的散列值签名的方法
	
疑问与解答
	A：数字签名能否保证机密性？
	Q：不能。
	A：数字签名能否被复制？
	Q：可以被复制，但并不意味签名失去意义。因为签名所表达的意义是特定的签名者曾对特定的消息进行
	了签名（历史无法改变），即便签名被复制，也并不会改变签名者和消息的内容。
	Q：签名能否被其他消息重复利用？
	A：不能。签名和消息之间是具有一一对应关系的，签名不能独立于消息而存在，消息不同签名内容也会
	不同。
	Q：同样都是认证，数字签名能否完全取代消息认证码？
	A：不能。作为通信双方，Alice向Bob发送自己的消息A-Msg和签名A-Sign，中途由Mallory截获，Mallory
	使用自己消息M-Msg和签名M-Sign分别代替A-Msg和A-Sign。Bob接收到信息后，恰巧自己有可以对Mallory
	的签名M-Sign验证的公钥，于是验证完成并处理完消息后将结果发送给Mallory，Mallory将自己随意涂改
	的信息再发给Alice，达成中间人攻击。如果使用MAC认证，由于其共享密钥机制，可以保证Alice与Bob的
	通信很难被第三者介入，避免了上述情况。

实现数字签名的算法
	RSA（既可以用于公钥密码，也可以用于数字签名）
	ElGamal(数字签名实现存在漏洞，现在仅被用于公钥密码)
	DSA（只被用于数字签名）
	Rabin（既可以用于公钥密码，也可以用于数字签名）

对数字签名的攻击
	中间人攻击
	对单向散列函数的攻击
	利用数字签名攻击公钥密码
	其他攻击

对称密码与公钥密码的对比
				对称密码				公钥密码
发送者			用共享密钥加密			用公钥加密
接收者			用共享密钥解密			用私钥解密
密钥配送问题	存在					不存在，但公钥需要另外认证
机密性			○						○

消息认证码和数字签名的对比
				消息认证码				数字签名
发送者			用共享密钥计算MAC值		用私钥生成签名
接收者			用共享密钥计算MAC值		用公钥验证签名
密钥配送问题	存在					不存在，但公钥需要另外认证
完整性			○						○
认证			○（仅限通信对象双方）	○（可适用于任何第三方）
防止否认		×						○

消息认证码是对通信数据的认证，数字签名是对通信对象的认证。

数字签名无法解决的问题
	正确使用数字签名，有一个前提就是用于验证签名的公钥必须属于真正的发送者。
	要确认公钥是否合法，可以通过第三方可信任机构对公钥施加数字签名，这就是证书。