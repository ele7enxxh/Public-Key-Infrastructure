PKI的主要目的是通过自动管理密钥和证书，为用户建立起一个安全的网络运行环境，使用户可以在多种应用环境下方便的使用加密和数字签名技术，从而保证网上数据的机密性、
完整性、有效性。
数据的机密性是指数据在传输过程中，不能被非授权者偷看。
数据的完整性是指数据在传输过程中不能被非法篡改。
数据的有效性是指数据不能被否认。

HTTPS工作原理
1.客户端发起HTTPS请求
2.服务端的配置
	采用HTTPS协议的服务器必须要有一套数字证书，这套证书其实就是一对公钥（crt public）和私钥（crt private）。
3.传送证书
	向发起请求的客户端传送一个公钥（crt public），其包含了证书的颁发机构、过期时间等信息。
4.客户端解析证书
	客户端对颁发机构、过期时间等信息进行验证以判断此公钥是否有效。如果有效就产生一个随机值，并用该公钥（crt public）对此随机值进行加密。
5.传送加密信息
	将加密后的随机值发送给服务端。以后客户端和服务器的通信就通过这个随机值来进行加密解密。
6.服务端解密信息
	服务端用私钥解密，得到客户端传过来的随机值，然后把内容通过该随机值进行对称加密。
	所谓对称加密就是将信息和私钥通过某种算法混合在一起，这样除非知道私钥，不然无法获取内容，而正好客户端和服务端都知道这个私钥（这里即那个生成的随机值）。
7.传输加密后的信息
	服务端用私钥加密信息后传递给客户端，此信息可在客户端被还原。
8.客户端解密信息
	客户端用之前生成的私钥（随机值）解密服务端传过来的信息，获取解密后的内容。
	
SSL常用专业缩略语汇总
	JKS		JAVA密钥库
	OCSP	证书在线状态协议
	SAN		使用者备用名称
	SSL		安全套接字层协议
	TLS		安全传输层协议
	UCC		统一通信证书
	CRL		证书吊销清单
	FQDN	全域名（指主机名+域名的形式，譬如www.domain.com，www是主机名，domain.com是主机所在的域名）
	CN		通用名
	PKI		公钥基础设施
	
对称加密
	对称密钥加密，又称私钥加密，即信息的发送方和接收方用一个密钥去加密和解密数据。
	优点：加/解密速度快，适合于对大数据量进行加密。
	缺点：发送密钥过程中若被拦截会导致加密信息被第三方获取解密。
非对称加密
	非对称密钥加密系统，又称公钥密钥加密。它使用了一对密钥，公钥（public key）和私钥（private key）。私钥只能由一方保管，而公钥则可以发给任何请求它的人。
	非对称加密使用这对密钥中的一个进行加密，使用另一个进行解密。通常公钥加密，私钥解密。目前最常用的非对称加密算法是RSA算法。
	优点：机制灵活，安全可靠。
	缺点：加密和解密速度比对称密钥慢得多。
解决办法
	将对称加密的密钥使用非对称加密的公钥进行加密，然后发送出去，接收方使用私钥进行解密得到对称加密的密钥，然后双方可以使用对称加密来进行沟通。
	
PKI介绍
	构建密码服务系统的核心内容是如何实现密钥管理。公钥体制涉及到一对密钥，其密钥管理主要是针对公钥的管理问题，时下较好的解决方案是数字证书机制。
	PKI是提供公钥加密和数字签名服务的系统或平台，目的是为了管理密钥和证书。一个机构通过采用PKI框架管理密钥和证书可以建立一个安全的网络环境。
	PKI组成
		X.509格式的证书（X.509 V3）和证书废止列表CRL（X.509 V2）
		CA操作协议
		CA管理协议
		CA政策制定
	PKI应用系统组成
		认证中心CA
			PKI核心，CA负责管理PKI结构下的所有用户（包括各种应用程序）的证书，把用户的公钥和用户的其他信息捆绑在一起，在网上验证用户的身份，CA还要
			负责用户证书的黑名单登记和黑名单发布。
		X.500目录服务器
			用于发布用户的证书和黑名单信息，用户可通过标准的LDAP协议查询自己或其他人的证书和下载黑名单信息。
		具有高强度密码算法（SSL）的安全WWW服务器
		Web（安全通信平台）
			有Web Client端和Web Server端两部分，分别安装在客户端和服务器端，通过SSL协议保证客户端和服务端数据的机密性、完整性、身份验证。
		自开发安全应用系统
			指各行业自开发的各种具体应用系统。
	完整的PKI系统由五大系统组成
		认证机构（CA）
		数字证书库
		密钥备份及恢复系统
		证书作废系统
		应用接口（API）
		
消息摘要 - 保证消息传递过程的完整性
	背景：加密后的消息在传递过程中可能会遭到篡改或替换，无法保证原消息的完整性
	方法：同时发一个其消息的简单摘要给接收方，供接收方比对消息，如果相符则消息正确。
	这样的方法称为消息摘要、单向函数或散列函数。其设计使将摘要还原成消息极其困难，而且对两个不同的消息几乎不可能生成相同的摘要，从而排除了替换一个消
	息为另一个而维持相同摘要的可能性。
数字签名 - 保证消息来源的唯一正确性
	背景：发送方有可能是盗用帐号发送消息
	方法：以加密的消息摘要和其他信息（比如一个流水号）以及发送者的私钥建立数字签名。
	
SSL/TLS协议介绍
从协议内部的功能层面上看，SSL/TLS协议可分为两层：
	1.SSL/TLS记录协议
		它建立在可靠的传输层协议（如TCP）之上，为上层协议提供数据封装、压缩、加密等基本功能。
	2.SSL/TLS握手协议
		它建立在SSL/TLS记录协议之上，用于在实际的数据传输开始前，通讯双方进行身份认证、协商加密算法、交换加密密钥等初始化协商功能。
从协议使用方式来看，又可以分成两种类型：
	1.SSL/TLS单向认证
		客户端会认证服务端身份，而服务端不会验证客户端身份。首先，客户端发起请求，服务端收到握手请求后，会选择适合双方的协议版本和加密方式。然后，再将
		协商结果和服务端公钥一起发送给客户端。客户端利用服务端的公钥，对要发送的数据进行加密，并发送给服务端。服务端收到后，用本地私钥对收到的客户端加
		密数据进行解密。然后，通讯双方都会使用这些数据来产生双方之间通讯的加密密钥。接下来，双方就可以开始安全通讯过程了。
	2.SSL/TLS双向认证
		双方都会互相认证，也就是两者之间将会交换证书。基本过程和单向认证完全一样，只是在协商阶段多了几个步骤。在服务器端将协商结果和服务端公钥一起发送
		给客户端后，会请求客户端的证书，客户端则会将证书发送给服务端。然后，在客户端给服务器发送加密数据后，客户端会将私钥生成的数字签名发送给服务端。
		而服务端则会用客户端证书中的公钥来验证数字签名的合法性。建立握手之后过程则和单向通讯完全保持一致。
SSL/TLS协议建立通讯的基本流程
	1.客户端发送所支持的SSL/TLS最高协议版本号和所支持的加密算法集合及压缩方法集合等信息给服务端。
	2.服务端收到客户端信息后，选定双方都能够支持的SSL/TLS协议版本和加密方法及压缩方法，返回给客户端。
	3.（可选）服务端发送服务端证书给客户端
	4.（可选）如果选择双向选择，服务端向客户端请求客户端证书。
	5.服务端通知客户端初始协商结束。
	6.（可选）如果选择双向验证，客户端向服务端发送客户端证书。
	7.客户端使用服务端公钥，对客户端公钥和密钥种子进行加密，再发送给服务端。
	8.（可选）如果选择双向验证，客户端用本地私钥生成数字签名，并发送给服务端，让其通过收到的客户端公钥进行身份验证。
	9.通讯双方基于密钥种子等信息生成通讯密钥。
	10.客户端通知服务端已将通讯方式切换到加密模式。
	11.客户端做好加密通讯的准备。
	12.服务端通知客户端已将通讯方式切换到加密模式。
	13.服务端做好加密通讯的准备。
	14.双方使用客户端密钥，通过对称加密算法对通讯进行加密。
	15.通讯结束后，任何一方发出断开SSL连接的消息。
加密哈希功能
	加密哈希功能与checksum功能相似。不同之处在于，checksum用来侦测意外的数据变化而前者用来侦测故意的数据篡改。
	数据被哈希后产生一小串比特字符串，微小的数据改变将导致哈希串的变化。
	发送加密数据时，SSL会使用加密哈希功能来确保数据一致性，用来阻止第三方破坏通讯数据完整性。
	SSL常用的哈希算法有MD5和SHA。
消息认证码
	密钥信息与加密哈希功能产生的数据结合就是哈希消息认证码（HMAC）。
	SSL用HMAC来保证数据传输的安全。
数字签名
	一个消息的加密哈希被创建后，哈希值用发送者的私钥加密，加密的结果就是数字签名。
	数字签名技术是将原文通过特定HASH函数得到的摘要信息用发送者的私钥加密，与原文一起传送给接收者。
	
HTTPS上网流程
	准备阶段叫做PKI/CA，上网阶段叫做SSL/TLS。
	PKI/CA部分：网站/CA/操作系统厂家准备阶段
		1.CA将包含其公钥、自身名称等信息的自签或互签证书提供给操作系统厂家。
		2.操作系统厂家通过系统安装或更新，将最新的CA证书，同步到所有客户端的操作系统。
		3.HTTPS网站向CA申请自己的证书，网站将自己的公钥等信息提供给CA。
		4.CA通过电子邮件、电话、工商核查、实地拜访等方式验证网站的真实性。
		5.如果验证通过，CA用自己的私钥对网站公钥等信息作签名。
	SSL/TLS部分：用户浏览器上网阶段
		6.用户在浏览器地址栏中输入网址回车上网。浏览器通过系统SSL/TLS库发起SSL/TLS的第一个消息，其中含有SNI表明访问的目的域名是哪里。
		7.网站的反射代理根据SNI，找到网站证书，将其下发给客户端浏览器。
		8.浏览器在操作系统的证书库中找到CA的证书，获得CA公钥，用这个公钥校验网站证书中CA私钥产生的签名。校验通过，表示这个确实是你想要访问的网站。
		9.浏览器和网站通过非对称密码机制，交换会话密钥，双方具有想相同的会话密钥。
		10.浏览器用会话密钥加密数据，发给网站，网站用该会话密钥解密；反之亦然。
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	https://www.2cto.com/kf/201608/534850.html
	
	http://blog.51cto.com/jyxnt/1590235
	http://man.linuxde.net/openssl
	https://blog.csdn.net/xs574924427/article/details/17240793
	http://blog.chinaunix.net/xmlrpc.php?r=blog/article&uid=24922718&id=5139196
	https://blog.csdn.net/wuhuiran/article/details/1783436
	https://wenku.baidu.com/view/9e2311ec3186bceb18e8bb24.html
	RSA算法
	https://www.cnblogs.com/Shenghuafen/archive/2004/06/04/13400.aspx
	https://www.cnblogs.com/sddai/p/5667472.html
	
	函数指针和指针函数
	证书的格式要了解一下
	SSL_CTX结构体
	
	
	https://en.wikipedia.org/wiki/Public_key_infrastructure
	https://en.wikipedia.org/wiki/Transport_Layer_Security