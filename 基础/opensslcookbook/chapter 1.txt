明文加密 - 保密性
问题：明文发送过程中被第三方截获监听
解决：明文加密后发送
通识：
	衡量加密强度的通常方法是密钥的长度
	流算法和一次性密钥共同生成流密码。流密码RC4因其速度和简洁而闻名，但不安全
	最流行的分块密码是AES，有128,192,256bits几种
	RC4和AES都是对称加密算法

哈希密文 - 完整性
问题：密文在发送过程中被第三方截获，第三方对此密文涂改后再发送给接收方，造成接收到的密文不完整
解决：发送密文的同时，发送对密文的哈希
哈希函数：将不定长度的输入转化成定长输出的算法，也叫做指纹或消息认证。最常用的哈希算法是输出160bits结果的SHA1算法，但更推荐使用其变体SHA256

加密哈希函数的特征（加密哈希函数不等同于哈希函数）
	1.哈希还原它对应的信息不现实
	2.对于一条信息和它的哈希，找到同样哈希的另一条不同信息不现实
	3.任意两条信息，拥有同一个哈希不现实

消息认证码 - 真实性
问题：密文哈希后，将哈希与密文发送给接收方，第三方截获密文并丢弃，转而发送自己的密文和哈希，造成接收方信息不真实
解决：将密文的哈希再加密形成消息认证码(HMAC)，将其与密文一起发送
注意：HMAC是MAC的一种(Hash-based MAC)，它是经过hashing-key加密后的消息认证码，hashing-key只有通信双方可知。为了方便，MAC与HMAC不作区分。

消息重放
问题：将密文与MAC发送给接收方，第三方截获后（存储，间隔一段时间后）再发送此消息。当然，也可以将截获后的消息直接丢弃
解决：为每次发送的密文分配一个顺序序列号，此序列号作为MAC计算的一部分。接收方比对序列号，如果出现断层，可认为消息缺失；如果序列号重复，可认为消息重放

分组加密模式
ECB模式
	简介：事先设置数据填充项，之后将数据分块，每块长度与加密密钥等长，最后对每块单独加密
	问题：输入数据相同，加密结果相同，易遭受BEAST攻击
CBC模式
	简介：在ECB模式基础上引入初始化向量(IV)，即使输入数据相同，加密结果也不同
	原理：加密开始前生成一个与每块长度相同的IV。第一块数据与IV进行XOR运算，使用上次的运行结果作为新的IV与下面的数据进行XOR运算，依次类推
	推测：第一个IV发送给接收方进行顺序解密 或 最后一个IV发送给接收方进行逆序解密
GCM模式
	从TLSv1.2版本开始启用，提供保密性和完整性功能，是目前最好的模式

非对称加密（公钥加密）
引出：公钥加密数据，私钥解密数据，用于数据的保密性；私钥加密数据，公钥解密数据，用于数字签名。
用途：公钥加密不适用于大量数据加密，通常用于认证及私钥协商，为快速对称加密服务。
注意：上面的认证不等同于数字签名，数字签名是认证的一种，是哈希后的认证。但为了方便，不作区分。
举例：RSA是最流行的非对称加密方法，推荐使用2048 bits长度，等同于对称加密的112 bits长度

数字签名 - 这里是对密文进行签名
功能：附加到密文的后面，用于认证密文的可靠性。
举例：MAC就是数字签名的一种，用于认证的秘钥（秘钥不同于密钥）需提前协商。需提前进行秘钥协商是MAC使用的一个局限性。
发送方生成数字签名流程：
	1.密文生成哈希
	2.编码哈希及补充进去的元数据（如哈希算法类型）
	3.使用私钥加密编码，其结果就是数字签名
接收方验证数字签名流程：
	1.使用相同的哈希算法（公开）哈希密文，生成本地哈希
	2.使用发送方公钥解密编码后的密文，之后解码哈希
	3.确认哈希算法，解码的哈希与本地哈希对比验证
数字签名的强度：取决于加密算法，哈希算法，编码算法
注意：RSA既能用作加密，也能用作签名。而DSA和ECDSA只能用作签名。
	
随机数生成 - 密钥不过是一些随机数
随机数的品质：机器计算的可预见性使得其做随机数的生成工作很困难。
真随机数生成：计算机先收集一定熵（通过键击、鼠标移动、与外围设备如硬盘的交互获得），之后生成随机数。由于收集熵的时间有限，此方式不具备可操作性。
伪随机数生成：利用收集到的熵作为种子，驱动生成伪随机数。这种统计上看似随机的随机数常用于程序中，但不适合用作加密。
加密伪随机数：...

密钥交换 - 安全地在众目睽睽之下传递秘钥
说明：发送方使用接收方的公钥对秘钥进行加密，可以使用RSA或Diffie-Hellman密钥交换协议，后者慢但更安全

加密强度与密钥长度的映射关系
Symmetric	RSA/DSA/DH	Elliptic-curve-crypto	Hash
80			1024		160						160
112			2048		224						224
128			3072		256						256
256			15360		512						512

中间人(MITM)攻击 - 来自安全传输层的主要攻击方式
类型：被动攻击和主动攻击，前者只作监听，后者同时采用一些手段影响通信
原理：第三方加入网络，在某个节点重新路由受害者的通信网络
形式：以后补充
前向保密性：TLS多使用基于RSA算法的密钥交换机制，此时RSA密钥除了用于密钥交换也用于解密之前的对话，则这种密钥交换机制不支持前向保密性。否则支持前向保密性。
ECDHE（DHE）算法属于DH类密钥交换算法， 私钥不参与密钥的协商，故即使私钥泄漏，客户端和服务器之间加密的报文都无法被解密，这叫 前向安全（forward secrity）

第二章
tls通过记录协议对来自一个连接上的所有底层消息进行传输控制并一个连接上所有底层消息的交换